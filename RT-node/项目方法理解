前言：Node

1.Node就是处理高并发的！　　　　　事件驱动　异步IO   





一：写文件  流的形式写，来解决高并发的问题。
1.fs.writeFile    异步写文件    fs.writeFile(file, data[, options], callback)
  Note that it is unsafe to use fs.writeFile multiple times on the same file without waiting for the callback. For this scenario,      
  fs.createWriteStream is strongly recommended.
  
2.fs.readdirSync(path,[options])     同步读 


二：删除文件报错


三：项目代码学习

1.fs模块


2.lodash

3.path模块

4.webpack模块

5.archiver模块




1. fs.writeFile('./runTime/widgetRoot.js', widgetRootStr, 'utf-8');
   同时往这里写，会不会有问题啊！　　　并发环境下
   
2.哦，同步和异步，看业务需求！　如果有关联，就需要同步！　对于没关联，自然可以用异步方法来提升代码执行效率了

3.node是如何实现高并发的？　

4.node高并发脚本测试工具

5.异步IO是如何提高效率的？　

答：ａ：哦，不阻塞后面的代码，来提升效率。　再到一定时间点去执行回调。
　　ｂ：




